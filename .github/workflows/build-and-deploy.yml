name: CI

on:
  push:
    branches: [ main, develop ]

  workflow_dispatch:

env:
  REGISTRY: "registry.digitalocean.com/air"
  IMAGE_NAME: "original-api"

jobs:
  install-deps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache node modules
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('yarn.lock') }}
      - uses: actions/setup-node@v1
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          node-version: 16.3.0
      - name: yarn install
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --pure-lockfile

  nx_build:
    runs-on: ubuntu-latest
    needs: install-deps
    steps:
      - uses: actions/checkout@v3
      - run: git fetch --no-tags --prune --depth=1 origin main
      
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('yarn.lock') }}
        
      - run: yarn nx run shared-api-spec:prepare
      - run: yarn nx affected --target=build --base=origin/main --prod --parallel

  build_and_push_docker:
    runs-on: ubuntu-latest
    needs: nx_build
    steps:
      - name: Checkout the repo 
        uses: actions/checkout@v3

      - run: git fetch --no-tags --prune --depth=1 origin master
      
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('yarn.lock') }}
        
      - name: Build container image
        run: docker build -f ./packages/apps/$IMAGE_NAME/Dockerfile -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    
      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600
      
      - name: Push image to DigitalOcean Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)